{"ast":null,"code":"const displayResult = calculatorObj => {\n  const {\n    total\n  } = calculatorObj;\n  const {\n    next\n  } = calculatorObj;\n  const {\n    operation\n  } = calculatorObj;\n  let result = null;\n\n  if (total === null && next === null) {\n    result = 0;\n  } else if (next !== null && total === null) {\n    result = next;\n  } else if (next !== null && total !== null) {\n    if (operation !== null && operation !== undefined) {\n      result = `${total} ${operation} ${next}`;\n    } else {\n      result = total;\n    }\n  } else if (next === null && total !== null) {\n    if (operation !== null && operation !== undefined) {\n      result = `${total} ${operation}`;\n    } else {\n      result = total;\n    }\n  }\n\n  return result;\n};\n\nexport default displayResult;","map":{"version":3,"sources":["C:/Users/leona/Microverse/Module3/1week/math_magicians/src/logic/displayResult.js"],"names":["displayResult","calculatorObj","total","next","operation","result","undefined"],"mappings":"AAAA,MAAMA,aAAa,GAAIC,aAAD,IAAmB;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAYD,aAAlB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAWF,aAAjB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAgBH,aAAtB;AACA,MAAII,MAAM,GAAG,IAAb;;AAEA,MAAIH,KAAK,KAAK,IAAV,IAAkBC,IAAI,KAAK,IAA/B,EAAqC;AACnCE,IAAAA,MAAM,GAAG,CAAT;AACD,GAFD,MAEO,IAAIF,IAAI,KAAK,IAAT,IAAiBD,KAAK,KAAK,IAA/B,EAAqC;AAC1CG,IAAAA,MAAM,GAAGF,IAAT;AACD,GAFM,MAEA,IAAIA,IAAI,KAAK,IAAT,IAAiBD,KAAK,KAAK,IAA/B,EAAqC;AAC1C,QAAIE,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAKE,SAAxC,EAAmD;AACjDD,MAAAA,MAAM,GAAI,GAAEH,KAAM,IAAGE,SAAU,IAAGD,IAAK,EAAvC;AACD,KAFD,MAEO;AACLE,MAAAA,MAAM,GAAGH,KAAT;AACD;AACF,GANM,MAMA,IAAIC,IAAI,KAAK,IAAT,IAAiBD,KAAK,KAAK,IAA/B,EAAqC;AAC1C,QAAIE,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAKE,SAAxC,EAAmD;AACjDD,MAAAA,MAAM,GAAI,GAAEH,KAAM,IAAGE,SAAU,EAA/B;AACD,KAFD,MAEO;AACLC,MAAAA,MAAM,GAAGH,KAAT;AACD;AACF;;AACD,SAAOG,MAAP;AACD,CAxBD;;AA0BA,eAAeL,aAAf","sourcesContent":["const displayResult = (calculatorObj) => {\r\n  const { total } = calculatorObj;\r\n  const { next } = calculatorObj;\r\n  const { operation } = calculatorObj;\r\n  let result = null;\r\n\r\n  if (total === null && next === null) {\r\n    result = 0;\r\n  } else if (next !== null && total === null) {\r\n    result = next;\r\n  } else if (next !== null && total !== null) {\r\n    if (operation !== null && operation !== undefined) {\r\n      result = `${total} ${operation} ${next}`;\r\n    } else {\r\n      result = total;\r\n    }\r\n  } else if (next === null && total !== null) {\r\n    if (operation !== null && operation !== undefined) {\r\n      result = `${total} ${operation}`;\r\n    } else {\r\n      result = total;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nexport default displayResult;\r\n"]},"metadata":{},"sourceType":"module"}